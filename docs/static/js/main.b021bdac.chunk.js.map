{"version":3,"sources":["firebase/firebase-config.tsx","helpers/fileUpload.tsx","helpers/loadNotes.tsx","types/types.tsx","actions/note.ts","hooks/useForm.tsx","components/notes/NotesAppBar.tsx","components/notes/NoteScreen.tsx","components/journal/NothingSelected.tsx","helpers/validators/user/isValidUser.ts","actions/ui.ts","actions/auth.tsx","components/journal/JournalEntry.tsx","components/journal/JournalEntries.tsx","components/journal/Sidebar.tsx","components/journal/JournalScreen.tsx","components/auth/LoginScreen.tsx","components/auth/RegisterScreen.tsx","routers/AuthRouter.tsx","routers/PrivateRoute.tsx","routers/PublicRoute.tsx","routers/AppRouter.tsx","components/reducers/noteReducer.ts","components/reducers/uiReducer.tsx","store/store.tsx","components/reducers/authReducer.tsx","JournalApp.tsx","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","googleAuthProvider","auth","GoogleAuthProvider","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","couldResp","secure_url","loadNotes","uid","collection","get","notesSnap","notes","forEach","snapHijo","push","id","data","types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","notesAddNew","notesActive","notesLoad","notesUpdated","notesFileUrl","notesDelete","notesLogoutCleaning","activeNote","note","type","payload","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","doc","update","refeshNote","Swal","fire","title","deleteNote","startNewNote","newNote","date","Date","getTime","add","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","NotesAppBar","useDispatch","active","useSelector","state","className","style","display","onChange","e","files","text","allowOutsideClick","showConfirmButton","willOpen","showLoading","fileUrl","close","startUpLoading","onClick","fileSelector","document","querySelector","HTMLElement","click","NoteScreen","formValues","activeId","useRef","useEffect","current","autoComplete","placeholder","src","alt","delete","startDeleting","NothingSelected","isValidUser","displayName","finishLogin","startLoginEmailPassword","email","password","signInWithEmailAndPassword","then","user","catch","message","Logout","JournalEntry","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","map","Sidebar","signOut","JournalScreen","LoginScreen","loading","UI","action","onSubmit","preventDefault","disabled","signInWithPopup","to","RegisterScreen","msgError","password2","isFormValid","isEmpty","dispatchError","isEmail","isValidPasswords","trim","length","validator","isValidPassword","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPaswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","uiReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","filter","store","createStore","applyMiddleware","thunk","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.b021bdac.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/firestore\"\r\nimport \"firebase/auth\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBiHmQft37_oWqbbPjRWBNSW5G-fIRDoNY\",\r\n    authDomain: \"react-app-curso-3ed89.firebaseapp.com\",\r\n    projectId: \"react-app-curso-3ed89\",\r\n    storageBucket: \"react-app-curso-3ed89.appspot.com\",\r\n    messagingSenderId: \"627038201068\",\r\n    appId: \"1:627038201068:web:a6b3842a63407aec8bb1c9\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const db = firebase.firestore()\r\n\r\n  const googleAuthProvider= new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {\r\n      db,googleAuthProvider,firebase\r\n  }\r\n\r\n","\r\n\r\n\r\nexport const fileUpload= async(file:any)=>{\r\n\r\n    const cloudUrl=\"https://api.cloudinary.com/v1_1/dp2ccs5dl/upload\"\r\n\r\n    const formData = new FormData()\r\n    formData.append(\"upload_preset\",\"react-journal\")\r\n    formData.append(\"file\",file) \r\n\r\n    try {\r\n        const resp = await fetch(cloudUrl,{\r\n            method:\"POST\",\r\n            body:formData\r\n        })\r\n\r\n        if( resp.ok ){\r\n            const couldResp = await resp.json()\r\n            return couldResp.secure_url;\r\n        } else {\r\n            throw await resp.json()\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error\r\n    }\r\n\r\n}","import { db } from \"../firebase/firebase-config\"\r\n\r\nexport const loadNotes = async (uid:string)=>{\r\n\r\n     const notesSnap=  await db.collection(`${uid}/journal/notes`).get()\r\n\r\n    \r\n\r\n     const notes:any[]=[]\r\n\r\n        notesSnap.forEach(snapHijo => {\r\n            \r\n            notes.push({\r\n                    id:snapHijo.id,\r\n                    ...snapHijo.data()\r\n            })\r\n\r\n        })\r\n         //   console.log(notes) \r\n        return notes\r\n\r\n}","\r\nconst types = {\r\n\r\n    login: \"[Auth] Login\",\r\n    logout:\"[Auth] Logout\",\r\n\r\n    uiSetError:\"[UI] setError\",\r\n    uiRemoveError:\"[UI] Remove Error\",\r\n\r\n    uiStartLoading:\"[UI] Start loading\",\r\n    uiFinishLoading:\"[UI] Finish loading\",\r\n\r\n    notesAddNew: \"[Notes] New note\",\r\n    notesActive: \"[Notes] Set Active note\",\r\n    notesLoad: \"[Notes] Load notes\",\r\n    notesUpdated: \"[Notes] Updated note saved\",\r\n    notesFileUrl: \"[Notes] Updated image url\",\r\n    notesDelete:\"[Notes] Delete note\",\r\n    notesLogoutCleaning: \"[Notes] Logout Cleaning\"\r\n\r\n\r\n}\r\n\r\nexport default types\r\n","import Swal from \"sweetalert2\"\r\nimport { IIAction,INote } from \"../components/reducers/noteReducer\"\r\nimport { db } from \"../firebase/firebase-config\"\r\nimport { fileUpload } from \"../helpers/fileUpload\"\r\nimport { loadNotes } from \"../helpers/loadNotes\"\r\nimport types from \"../types/types\"\r\n\r\n\r\n\r\n const startNewNote = () => {\r\n    return async(dispatch: React.Dispatch<React.SetStateAction<IIAction>>,getState:any)=>{\r\n\r\n        const {uid} = getState().auth \r\n      \r\n\r\n        const newNote = {\r\n            title:\"\",\r\n            body:\"\",\r\n            date: new Date().getTime()\r\n        }\r\n        \r\n        const doc = await db.collection(`${uid}/journal/notes`).add(newNote)\r\n        \r\n        dispatch( activeNote(doc.id,newNote))\r\n        dispatch(addNewNote(doc.id,newNote))\r\n    }\r\n    \r\n}\r\n\r\nexport const activeNote =(id:string, note:INote)=>({\r\n        type:types.notesActive,\r\n        payload:{\r\n            ...note,id\r\n        }\r\n})\r\n\r\n\r\nexport const addNewNote=(id:string, note:any)=>({\r\n        type:types.notesAddNew,\r\n        payload:{\r\n            id,\r\n            ...note\r\n        }\r\n})\r\n\r\nexport const startLoadingNotes=(uid:string)=>{\r\n        return async (dispatch: React.Dispatch<React.SetStateAction<IIAction >>)=>{\r\n            const notes = await loadNotes(uid)\r\n            dispatch(setNotes(notes))\r\n        }\r\n}\r\n\r\n\r\nexport const setNotes =(notes:any)=>({\r\n    type:types.notesLoad,\r\n    payload: notes\r\n})\r\n\r\nexport const startSaveNote =(note:any)=>{\r\n\r\n        return async (dispatch: React.Dispatch<React.SetStateAction<IIAction >>,getState:any)=>{\r\n                const {uid} = getState().auth;\r\n             \r\n\r\n            if(!note.url){\r\n\r\n                    delete note.url\r\n            }\r\n               \r\n                const noteToFirestore = {...note}\r\n\r\n                delete noteToFirestore.id\r\n\r\n                await db.doc(`${ uid }/journal/notes/${note.id}`).update(noteToFirestore)\r\n\r\n                dispatch(refeshNote(note.id,note))\r\n                Swal.fire(\"Saved\",note.title,\"success\")\r\n        }\r\n\r\n        //react-journal\r\n}\r\n\r\nexport const refeshNote =(id:string,note:any)=>({\r\n\r\n    type:types.notesUpdated,\r\n    payload:{\r\n        id,\r\n        note:{\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n\r\n})   \r\n\r\n\r\nexport const startUpLoading =(file:any)=>{\r\n\r\n        return async (dispatch:React.Dispatch<React.SetStateAction<any >>,getState:any)=>{\r\n\r\n            const {active:activeNote}=getState().notes;\r\n\r\n            Swal.fire({\r\n                title:\"Uploading...\",\r\n                text:\"Please wait...\",\r\n                allowOutsideClick:false,\r\n                showConfirmButton: false,\r\n                willOpen:() => {\r\n                    Swal.showLoading()\r\n                }\r\n            });\r\n            \r\n            const fileUrl = await fileUpload(file)\r\n\r\n            activeNote.url = fileUrl\r\n\r\n           dispatch(startSaveNote(activeNote))\r\n\r\n            Swal.close()\r\n        }\r\n}\r\n\r\nexport const startDeleting=(id:string)=>{\r\n\r\n    return async(dispatch:React.Dispatch<React.SetStateAction< IIAction >>,getState:any)=>{\r\n\r\n        const uid=getState().auth.uid\r\n\r\n        await db.doc(`${ uid }/journal/notes/${id}`).delete()\r\n\r\n        dispatch(deleteNote(id))\r\n        \r\n\r\n    }\r\n\r\n}\r\n\r\nexport const deleteNote = (id:string) => ({\r\n\r\n    type:types.notesDelete,\r\n    payload: id\r\n\r\n})\r\n\r\n\r\nexport const noteLogout=()=>({\r\n    type:types.notesLogoutCleaning,\r\n    \r\n})\r\n\r\n\r\n export default startNewNote\r\n","import { useState } from \"react\"\r\n\r\n\r\nconst useForm = (initialState={}) => {\r\n                                                    \r\n    \r\n        const [values, setValues] = useState<any>(initialState)\r\n        \r\n\r\n        const reset=()=>{\r\n            setValues(initialState)\r\n        }\r\n\r\n        const handleInputChange=({target}:React.ChangeEvent<HTMLInputElement>)=>{\r\n          //  console.log(target.name)\r\n            setValues({\r\n                ...values,\r\n                [target.name]:target.value\r\n            })\r\n\r\n    }\r\n\r\n    return[values,handleInputChange,reset]\r\n\r\n}\r\n\r\nexport default useForm","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUpLoading } from '../../actions/note'\r\nconst NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {active}:any = useSelector<any>(state => state.notes)\r\n\r\n\r\n    const handleSave=()=>{\r\n       dispatch(startSaveNote(active))\r\n       \r\n    }\r\n    const handlePictureClick = ()=>{\r\n  \r\n       const fileSelector = document.querySelector(\"#fileSelector\")\r\n        if (fileSelector instanceof HTMLElement) {\r\n            fileSelector.click();\r\n          }\r\n        \r\n            \r\n    }\r\n\r\n   const  handleFileChange = (e:any)=>{\r\n\r\n            const file = e.target.files[0]\r\n            if(file){\r\n                dispatch(startUpLoading(file))\r\n            }\r\n\r\n    }\r\n    \r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 agosto 2021</span>\r\n\r\n            <input type=\"file\" name=\"file\" id=\"fileSelector\" style={{display:\"none\"}}  onChange={handleFileChange} />\r\n\r\n            <div>\r\n                \r\n                <button className=\"btn\" onClick={handlePictureClick}>\r\n                        Picture\r\n                </button>\r\n\r\n                <button className=\"btn\" onClick={handleSave}>\r\n                        Save\r\n                </button>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotesAppBar\r\n","import React from 'react'\r\nimport { useRef } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/note'\r\nimport useForm from '../../hooks/useForm'\r\nimport NotesAppBar from './NotesAppBar'\r\n\r\nconst NoteScreen = () => {\r\n\r\n    const  dispatch = useDispatch()\r\n\r\n    const { active: note }: any = useSelector<any>(state => state.notes)\r\n\r\n    const [formValues, handleInputChange,reset] = useForm(note)\r\n\r\n    const { body, title,id } = formValues\r\n\r\n    const activeId = useRef(note.id) \r\n\r\n    useEffect(()=>{\r\n        if(note.id !== activeId.current){\r\n                reset(note)\r\n            activeId.current = note.id\r\n        }\r\n    }\r\n    ,[note,reset])\r\n\r\n    useEffect(() => {\r\n       \r\n        dispatch(activeNote(formValues.id,{...formValues}))\r\n\r\n    }, [formValues,dispatch])\r\n\r\n\r\n    const handleDelete=()=>{\r\n        dispatch(startDeleting(id))\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n            <div className=\"notes__content\">\r\n                <input\r\n                    autoComplete=\"off\"\r\n                    type=\"text\"\r\n                    placeholder=\"some awesome title\"\r\n                    className=\"notes__tites-input\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={handleInputChange}\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"what happened today?\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={body}\r\n                    onChange={handleInputChange}\r\n                ></textarea>\r\n\r\n                {\r\n                    (note.url) &&\r\n                    (<div className=\"notes__image\">\r\n                        <img src={note.url} alt=\"imagen\" />\r\n                    </div>)\r\n                }\r\n\r\n            </div>\r\n\r\n                <button className=\"btn btn-danger\" onClick={handleDelete}> Delete </button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteScreen\r\n","import React from 'react'\r\n\r\nconst NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n                <p>\r\n                    Select something\r\n                    <br />\r\n                    or create an entry!\r\n                </p>\r\n                <i className=\"far fa-star fa-4x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NothingSelected\r\n","interface IIValidUserPrps {\r\n    uid?:string \r\n    displayName?:string |null\r\n}\r\nexport const isValidUser = ({uid, displayName}: IIValidUserPrps)=>{\r\n    if (uid && displayName) {\r\n        return true\r\n    }\r\n    return false\r\n\r\n}","import types from \"../types/types\"\r\n\r\n\r\nexport const setError  = (err:string) => ({\r\n    type:types.uiSetError,\r\n    payload:err\r\n})\r\n\r\nexport const removeError=()=>({\r\n    type:types.uiRemoveError,\r\n    \r\n})\r\n\r\n\r\nexport const startLogin =()=>({\r\n    type:types.uiStartLoading\r\n})\r\n\r\nexport const finishLogin=()=>({\r\n    type:types.uiFinishLoading \r\n})\r\n\r\n","import {  IAction } from \"../components/reducers/authReducer\";\r\nimport types from \"../types/types\"\r\nimport { firebase, googleAuthProvider } from \"../firebase/firebase-config\"\r\nimport { isValidUser } from \"../helpers/validators/user/isValidUser\";\r\nimport { finishLogin, startLogin } from \"./ui\";\r\nimport Swal from 'sweetalert2'\r\nimport { noteLogout } from \"./note\";\r\n\r\n\r\nexport const startLoginEmailPassword = (email: string, password: string) => {\r\n\r\n    return (dispatch: React.Dispatch<React.SetStateAction<IAction>>) => {\r\n        \r\n        dispatch(startLogin())\r\n\r\n        firebase.auth().signInWithEmailAndPassword(email,password)\r\n\r\n        .then(({user}) => {\r\n            if (!isValidUser({ uid: user?.uid, displayName: user?.displayName })) {\r\n                return false\r\n            }\r\n            dispatch(login(user!.uid,user!.displayName!))\r\n            dispatch(finishLogin())\r\n        } )\r\n        .catch( e => {\r\n          //  console.log(e)\r\n            dispatch(finishLogin())\r\n            Swal.fire(\"Error\", e.message,\"error\")\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPaswordName=(email:string,password:string,name:string)=>{\r\n\r\n    return (dispatch: React.Dispatch<React.SetStateAction<IAction>>)=>{\r\n        firebase.auth().createUserWithEmailAndPassword(email,password)\r\n            .then( async ({user})=>{\r\n\r\n              await  user?.updateProfile({displayName:name} )\r\n               // console.log(user)\r\n                if (!isValidUser({ uid: user?.uid, displayName: user?.displayName })) {\r\n                    return false\r\n                }\r\n\r\n                dispatch( login(user!.uid, user!.displayName!) )\r\n            }).catch(e => {\r\n            //    console.log(e)\r\n                Swal.fire(\"Error\", e.message,\"error\")\r\n            })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch: React.Dispatch<React.SetStateAction<IAction>>) => {\r\n\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n\r\n            .then(({ user }) => {\r\n\r\n                if (!isValidUser({ uid: user?.uid, displayName: user?.displayName })) {\r\n                    return false\r\n                }\r\n\r\n                dispatch( login(user!.uid, user!.displayName!) )\r\n\r\n            //    console.log(user)\r\n              //  console.log(user?.uid, user?.displayName)\r\n\r\n            })\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const login = (uid: string, displayName: string) => {\r\n\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName\r\n        }\r\n    }\r\n}\r\nexport const startLogout = ()=>{\r\n    return async (dispatch: React.Dispatch<React.SetStateAction<IAction>>)=>{\r\n       await firebase.auth().signOut()\r\n       dispatch(Logout())\r\n       dispatch(noteLogout())\r\n       \r\n    }\r\n}\r\n\r\nexport const Logout =()=>({\r\n    type:types.logout\r\n})","import React from 'react'\r\nimport moment from \"moment\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { activeNote } from '../../actions/note';\r\n\r\ninterface IINote{\r\n    id:string,\r\n    date:number,\r\n    title:string,\r\n    body:string,\r\n    url?:string\r\n}\r\nconst JournalEntry = ({id,date,title,body,url}:IINote) => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const noteDate=moment(date)\r\n  //  console.log(noteDate)\r\n\r\n    const handleEntryClick=()=>{\r\n        //console.log(title,body)\r\n            dispatch(activeNote(id,{\r\n                date,title,body,url\r\n            }))\r\n    }\r\n\r\n\r\n    return ( \r\n        <div className=\"journal__entry pointer animate__animated animate__backInLeft\" onClick={handleEntryClick} >\r\n\r\n           { \r\n            url &&\r\n                <div className=\"journal__entry-picture\" style={{\r\n                        backgroundSize:\"cover\",\r\n                        backgroundImage:`url(${ url })`\r\n                    }}>\r\n\r\n                </div>\r\n            }\r\n             \r\n            <div className=\"journal__entry-body\">\r\n\r\n                <p className=\"journal__entry-title\"> {title} </p>\r\n\r\n                <p className=\"journal__entry-content\">\r\n                  {body}\r\n                </p>\r\n\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box\">\r\n                <span>{noteDate.format(\"dddd\")}</span>\r\n                <h4> {noteDate.format(\"Do\")} </h4>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntry\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport JournalEntry from './JournalEntry'\r\n\r\n\r\n\r\n\r\nconst JournalEntries = () => { \r\n    const {notes}:any = useSelector<any>(state => state.notes) \r\n        // console.log(notes )\r\n\r\n\r\n\r\n    return (    \r\n           <div className=\"journal__entries\">\r\n            {\r\n                  notes.map((note:any ) => (\r\n                         <JournalEntry \r\n                            key={note.id}\r\n                             {...note} />\r\n                    \r\n                \r\n                ))  \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalEntries\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth'\r\nimport JournalEntries from './JournalEntries'\r\nimport { useSelector, } from \"react-redux\"\r\nimport startNewNote from '../../actions/note'\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {name}:any = useSelector<any>( state => state.auth )\r\n    \r\n    const handleLogout =()=>{\r\n        dispatch(startLogout()) \r\n    }\r\n    const handleAddNew=()=>{\r\n        dispatch(startNewNote())\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar\">\r\n\r\n                <div className=\"journal__sidebar-navbar\">\r\n                    <h3 className=\"mt-5\">\r\n                        <i className=\"far fa-moon\"></i>\r\n                        <span> {name} </span>\r\n                    </h3>\r\n                    <button \r\n                    className=\"btn\"\r\n                    onClick={handleLogout}\r\n                    >Logout</button>\r\n                </div>\r\n                <div className=\"journal__new-entry\" onClick={handleAddNew}>\r\n                    <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                    <p className=\"mt-5\">New entry</p>\r\n                </div>\r\n                <JournalEntries />\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport NoteScreen from '../notes/NoteScreen'\r\nimport NothingSelected from './NothingSelected'\r\nimport Sidebar from './Sidebar'\r\n\r\n\r\n\r\nconst JournalScreen = () => {\r\n    const {active}:any = useSelector<any>(state => state.notes)\r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn animate__faster\">\r\n            <Sidebar />\r\n            <main>\r\n            \r\n                {\r\n                    (active) ? (<NoteScreen />) :(<NothingSelected />)\r\n                }\r\n                \r\n            </main>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default JournalScreen\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport useForm from '../../hooks/useForm'\r\nimport {useDispatch,useSelector} from \"react-redux\"\r\nimport {startGoogleLogin, startLoginEmailPassword } from '../../actions/auth'\r\n\r\nconst LoginScreen = () => {\r\n\r\n        const dispatch =  useDispatch()\r\n        const {loading}:any = useSelector<any>(state => state.UI)\r\n     \r\n        const handleGoogleLogin =()=>{\r\n            dispatch(startGoogleLogin())\r\n        }\r\n\r\n       const [formValues, handleInputChange ] = useForm({\r\n                 email:\"\",\r\n                 password:\"\"\r\n             })\r\n\r\n        const {email,password}=formValues\r\n\r\n\r\n        const handleLogin=(e:React.SyntheticEvent)=>{\r\n            e.preventDefault()\r\n\r\n            dispatch( startLoginEmailPassword(email,password) )\r\n            \r\n        }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n            <form action=\"\" \r\n            onSubmit={handleLogin}\r\n            className=\"animate__animated animate__fadeIn animate__faster\"\r\n            >\r\n\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"Email\" \r\n                name=\"email\"\r\n                autoComplete=\"off\"\r\n                className=\"auth__input\"\r\n                value={email}\r\n                onChange={handleInputChange}\r\n                />\r\n\r\n                <input type=\"password\" \r\n                placeholder=\"Password\" \r\n                name=\"password\" \r\n                className=\"auth__input\"\r\n                value={password}\r\n                onChange={handleInputChange}\r\n                />\r\n\r\n                <button type=\"submit\" className=\"btn btn-primary btn-block\" disabled={loading} >Login</button>\r\n\r\n               \r\n\r\n                <div className=\"auth__social-networks\">\r\n\r\n                    <p>Login social network</p>\r\n\r\n                    <div className=\"google-btn\" onClick={handleGoogleLogin} >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n                <Link to=\"/auth/register\" className=\"link\">\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React from 'react'\r\n\r\nimport { Link } from 'react-router-dom'\r\nimport useForm from '../../hooks/useForm'\r\nimport validator from \"validator\"\r\nimport { removeError, setError } from '../../actions/ui'\r\nimport { useDispatch,useSelector, } from \"react-redux\"\r\nimport { startRegisterWithEmailPaswordName } from '../../actions/auth'\r\n\r\nconst RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch()  \r\n\r\n    const {msgError}:any = useSelector<any>( state => state.UI )\r\n    \r\n   \r\n  //  console.log(msgError)\r\n\r\n\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\"\r\n    })  \r\n\r\n    const { name, email, password, password2 } = formValues\r\n\r\n    const handleRegister = (e: React.SyntheticEvent) => {\r\n        e.preventDefault()\r\n       // console.log(name, email, password, password2)\r\n\r\n        if (isFormValid()) {\r\n            dispatch(startRegisterWithEmailPaswordName(email,password,name))\r\n        }\r\n\r\n    }\r\n\r\n\r\n    const isFormValid = () => {\r\n\r\n        if (isEmpty(name)) {\r\n            dispatchError(\"name is required\")\r\n            return false\r\n        }\r\n        if (!isEmail(email)) {\r\n            dispatchError(\"email is not valid\")\r\n            return false\r\n        }\r\n        if (isValidPasswords(password, password2)) {\r\n            dispatchError(\"password should be at least 6 characters and match each other\")\r\n            return false\r\n        }\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    const dispatchError = (text: string) => dispatch(setError(text))\r\n\r\n    const isEmpty = (text: string) => text.trim().length === 0\r\n    const isEmail = (email: string) => validator.isEmail(email)\r\n    const isValidPasswords = (password: string, password2: string) => password !== password2 || isValidPassword(password)\r\n    const isValidPassword = (password: string) => password.length < 7\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n            <form action=\"\" onSubmit={handleRegister} className=\"animate__animated animate__fadeIn animate__faster\">\r\n\r\n                {\r\n                    msgError &&\r\n                   ( <div className=\"auth__alert-error\">\r\n                        {msgError}\r\n                    </div>)\r\n                }\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={name}\r\n                />\r\n\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"ejemplo@gmail.com\"\r\n                    name=\"email\"\r\n                    autoComplete=\"off\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={email}\r\n                />\r\n\r\n                <input type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password}    \r\n                />\r\n\r\n                <input type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    onChange={handleInputChange}\r\n                    value={password2}\r\n                />\r\n\r\n                <button type=\"submit\" \r\n                className=\"btn btn-primary btn-block mb-5\"\r\n                >Register</button>\r\n\r\n                <Link to=\"/auth/login\" className=\"link\">\r\n                    Already registed?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React from 'react'\r\nimport { Redirect, Route, Switch } from 'react-router'\r\nimport LoginScreen from '../components/auth/LoginScreen'\r\nimport RegisterScreen from '../components/auth/RegisterScreen'\r\n\r\nconst AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\"> \r\n            <Switch>\r\n                <Route exact path=\"/auth/login\" component={LoginScreen} />\r\n\r\n                <Route exact path=\"/auth/register\" component={RegisterScreen} />\r\n    \r\n                <Redirect to=\"/auth/login\" />\r\n\r\n            </Switch>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthRouter\r\n","import React, { VoidFunctionComponent } from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\nexport interface IProps{\r\n    isAuthenticated:boolean,\r\n    component:VoidFunctionComponent,\r\n    path:string,\r\n}\r\n\r\nconst PrivateRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    ...rest\r\n    }:any) => {\r\n       // console.log(rest.location.pathname)\r\n\r\n        return (\r\n            <Route {...rest} \r\n            \r\n            component={(props:any)=>(\r\n            \r\n                (isAuthenticated) ? (<Component {...props} />):(<Redirect to=\"/auth/login\" />)\r\n            )}\r\n            \r\n            />\r\n        )\r\n}\r\n\r\nexport default PrivateRoute\r\n","import React from 'react'\r\nimport { Redirect, Route } from 'react-router'\r\n\r\n\r\nconst PublicRoute = ({\r\n    isAuthenticated,\r\n    component:Component,\r\n    path,\r\n    ...rest\r\n    }:any) => {\r\n        return (\r\n            <Route {...rest} \r\n            \r\n            component={(props:any)=>(\r\n            \r\n                (isAuthenticated) ? (<Redirect to=\"/\" />) : (<Component {...props} />)\r\n            )}\r\n            \r\n            />\r\n        )\r\n}\r\n\r\nexport default PublicRoute\r\n","import React, { useEffect } from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    \r\n    Redirect\r\n  } from \"react-router-dom\";\r\n  \r\n\r\nimport {firebase} from \"../firebase/firebase-config\"\r\nimport JournalScreen from '../components/journal/JournalScreen';\r\nimport { useDispatch } from 'react-redux';\r\nimport AuthRouter from './AuthRouter';\r\nimport { login } from '../actions/auth';\r\nimport { useState } from 'react';\r\nimport PrivateRoute from './PrivateRoute';\r\nimport PublicRoute from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/note';\r\n\r\n  \r\n\r\nconst AppRouter = () => {\r\n    const [checking, setChecking] = useState(true)\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n\r\n        firebase.auth().onAuthStateChanged( async (user) => {\r\n            \r\n                if(user?.uid){\r\n                        dispatch(login(user.uid,user.displayName!))\r\n                        setIsLoggedIn(true)\r\n\r\n                        dispatch(startLoadingNotes(user.uid))\r\n\r\n                }else{\r\n                    setIsLoggedIn(false)\r\n                }\r\n                setChecking(false)\r\n        } )\r\n\r\n    }, [dispatch,setChecking,setIsLoggedIn])\r\n\r\n    if(checking){\r\n        return( \r\n            <h1>Espere...</h1>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n                <div>\r\n                    <Switch>\r\n                        <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticated={isLoggedIn} />\r\n                        <PrivateRoute exact path=\"/\" component={JournalScreen} isAuthenticated={isLoggedIn} />\r\n                        <Redirect to=\"/auth/login\" />\r\n                    </Switch>\r\n                </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter\r\n","import types from \"../../types/types\"\r\n\r\n\r\nexport interface IIAction {\r\n    type:string\r\n    payload:INote[] | any\r\n}\r\nexport interface INote {\r\n    id?:string ,\r\n    title:string,\r\n    body:string,\r\n    imageUrl?:string,\r\n    date:number,\r\n    url?:string\r\n}\r\ninterface IInitialState {\r\n    notes:INote[],\r\n    active:INote | null \r\n\r\n}\r\n\r\nconst initialState={\r\n    notes:[],\r\n    active:null\r\n\r\n}\r\n\r\nexport const noteReducer = (state:IInitialState=initialState, action:IIAction) => {\r\n   \r\nswitch(action.type){\r\n    case types.notesActive :\r\n        return {\r\n            ...state,\r\n            active:{\r\n                ...action.payload\r\n            }\r\n        }\r\n    case types.notesLoad :\r\n        return {\r\n            ...state,\r\n            notes:[...action.payload]\r\n        }\r\n    case types.notesUpdated:\r\n        return {\r\n            ...state,\r\n            notes: state.notes.map(note => note.id === action.payload.id\r\n               ? action.payload.note : note\r\n                )\r\n        }\r\n    case types.notesDelete:\r\n        return {\r\n            ...state,\r\n            active:null,\r\n            notes: state.notes.filter( note => note.id !== action.payload )\r\n        }\r\n    case types.notesLogoutCleaning:\r\n        return {\r\n            ...state,\r\n            active:null,\r\n            notes:[]\r\n        }\r\n    case types.notesAddNew:\r\n        return {\r\n            ...state,\r\n            notes:[action.payload, ...state.notes]\r\n        }\r\n\r\n    default: \r\n    return state\r\n}   \r\n\r\n\r\n}\r\n","import types from \"../../types/types\";\r\nimport { IAction } from \"../reducers/authReducer\";\r\n\r\n\r\ninterface IInitialState {\r\n    loading:boolean ,\r\n    msgError:null | string \r\n}\r\n\r\nconst initialState:IInitialState={\r\n    loading:false ,\r\n    msgError:null\r\n}\r\n\r\nconst uiReducer = (state=initialState,action:IAction) => {\r\n    \r\nswitch (action.type) {\r\n    case types.uiSetError:\r\n        return {\r\n            ...state,\r\n            msgError: action.payload\r\n        }\r\n    case types.uiRemoveError:\r\n        return {\r\n            ...state,\r\n            msgError:null\r\n        }\r\n\r\n    case types.uiStartLoading:\r\n        return {\r\n            ...state,\r\n            loading:true\r\n        }\r\n    case types.uiFinishLoading:\r\n        return{\r\n            ...state,\r\n            loading:false\r\n        }\r\n    default:\r\n        return state\r\n}\r\n\r\n}\r\n\r\nexport default uiReducer\r\n","import { createStore ,combineReducers, applyMiddleware,compose } from \"redux\"\r\nimport thunk from 'redux-thunk';\r\nimport { authReducer } from \"../components/reducers/authReducer\"\r\nimport { noteReducer } from \"../components/reducers/noteReducer\";\r\nimport uiReducer from \"../components/reducers/uiReducer\";\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n    \r\n\r\nconst reducers = combineReducers({\r\n    auth:authReducer,\r\n    UI:uiReducer,\r\n    notes:noteReducer\r\n})\r\n\r\n\r\nexport const store = createStore(reducers,composeEnhancers(applyMiddleware(thunk)))","import types from \"../../types/types\"\r\n\r\nexport interface IPayload {\r\n    uid: string  ,\r\n    displayName:string \r\n}\r\n\r\nexport interface IAction{\r\n    type:string,\r\n    payload?:IPayload \r\n}\r\n\r\nexport const authReducer = (state={},action:IAction) => {\r\n\r\n    switch(action.type){\r\n\r\n        case types.login:\r\n            return {\r\n                uid:action.payload!.uid,\r\n                name:action.payload!.displayName\r\n            } \r\n\r\n        case types.logout:\r\n            return { }\r\n\r\n            default:\r\n                return state\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\n","import React from 'react'\r\nimport AppRouter from './routers/AppRouter'\r\nimport {Provider} from \"react-redux\"\r\nimport { store } from './store/store'\r\nconst JournalApp = () => {\r\n    return (\r\n\r\n      <Provider store={store}>\r\n            <AppRouter />\r\n     </Provider>\r\n            \r\n        \r\n    )\r\n}\r\n\r\nexport default JournalApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport JournalApp from './JournalApp';\nimport \"./styles/styles.scss\"\n\n\nReactDOM.render(\n\n    <JournalApp />\n ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}